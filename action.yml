name: Deploy Static App to AWS
author: Arky Asmal
description: Deploys a static app (SPA, SSG or static pages) to an S3 bucket, and then invalidates the Cloudfront cache for it.
branding:
  icon: upload-cloud
  color: blue
inputs:
  aws_region:
    type: string
    required: true
  aws_access_key_id:
    type: string
    required: true
  aws_secret_access_key:
    type: string
    required: true
  cloudfront_distribution_id:
    type: string
    required: true
  bucket_name:
    type: string
    required: true
  app_secrets:
    default: "{}"
    required: false
  node_verison:
    type: string
    default: 20
    required: false
  path_to_app:
    type: string
    default: "./"
    required: false
  build_dir:
    type: string
    default: "./build"
    required: false
  secrets_prefix:
    type: string
    default: ".*"
    required: false
  env_file_name:
    type: string
    default: ""
    required: false
  destination_path:
    type: string
    required: false
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4
    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node_version }}
    - name: Extract React App environment variables
      uses: aasmal97/create-env-file@v3.1.2
      with:
        ENV_FILE_NAME: ${{ inputs.env_file_name }}
        APP_SECRETS: ${{ inputs.app_secrets }}
        DESTINATION_PATH: ${{ inputs.destination_path }}
        PREFIX_FILTER: ${{ inputs.secrets_prefix }}
        WORKING_DIRECTORY_PATH: ${{ github.workspace }}/${{inputs.path_to_app}}
    - name: Build static site
      shell: bash
      run: |
        cd ${{ inputs.path_to_app }}
        npm install
        npm run build
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ inputs.aws_access_key_id }}
        aws-secret-access-key: ${{ inputs.aws_secret_access_key }}
        aws-region: ${{ inputs.aws_region }} # Use your bucket region here
    - name: Deploy static site to S3 bucket
      shell: bash
      run: |
        cd ${{ inputs.path_to_app }}
        aws s3 sync ${{ inputs.build_dir }} s3://${{ inputs.bucket_name }} --delete
    - name: Invalidate Cloudfront cache
      continue-on-error: true
      shell: bash
      run: |
        cd ${{ inputs.path_to_app }}
        aws cloudfront create-invalidation --distribution-id ${{ inputs.cloudfront_distribution_id }} --paths "/*"
    # - name: Invalidate Cloudfront cache
    #   uses: chetan/invalidate-cloudfront-action@v2
    #   continue-on-error: true
    #   env:
    #     DISTRIBUTION: ${{ inputs.cloudfront_distribution_id }}
    #     PATHS: "/*"
    #     AWS_REGION: ${{ inputs.aws_region }}
    #     AWS_ACCESS_KEY_ID: ${{ inputs.aws_access_key_id }}
    #     AWS_SECRET_ACCESS_KEY: ${{ inputs.aws_secret_access_key }}
